plugins {
	id 'fabric-loom' version '0.6-SNAPSHOT'
}

repositories {
	jcenter()

	maven {
		name = "Fabric"
		url "https://maven.fabricmc.net/"
	}
	maven {
		name = "dblsaiko"
		url = "https://maven.dblsaiko.net/"
	}
	maven {
		name = "Cotton"
		url = "https://server.bbkr.space/artifactory/libs-release/"
	}
	maven {
		name = 'TerraformersMC'
		url = 'https://maven.terraformersmc.com/'
	}
	maven { url 'https://jitpack.io' }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation("com.github.grondag:canvas:${project.canvas_commit}") {
		exclude module: "modmenu"
	}

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching(["fabric.mod.json", "pack.mcmeta"]) {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

task shaderpack(type: Zip) {
	archiveFileName = "${archiveBaseName.get()}-${archiveVersion.get()}.zip"
	destinationDirectory = jar.destinationDirectory
	from sourceSets.main.resources
	exclude "fabric.mod.json"

	filesMatching("pack.mcmeta") {
		expand "version": project.version
	}
}

build.dependsOn shaderpack